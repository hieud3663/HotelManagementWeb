name: .NET Docker CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Stop existing containers
      run: |
        cd $GITHUB_WORKSPACE
        docker-compose down || true

    - name: Remove old images (optional - gi·∫£i ph√≥ng dung l∆∞·ª£ng)
      run: |
        docker image prune -af --filter "label=project=hotelmanagement" || true

    - name: Build and start Docker containers
      run: |
        cd $GITHUB_WORKSPACE
        docker-compose up -d --build

    - name: Wait for application to be ready
      run: |
        echo "‚è≥ ƒê·ª£i ·ª©ng d·ª•ng kh·ªüi ƒë·ªông..."
        sleep 30
        
    - name: Check container status
      run: |
        echo "üìä Tr·∫°ng th√°i containers:"
        docker-compose ps
        
    - name: Show application logs
      run: |
        echo "üìù Logs c·ªßa webapp:"
        docker-compose logs --tail=50 webapp

    - name: Health check
      run: |
        echo "üè• Ki·ªÉm tra health..."
        max_attempts=10
        attempt=0
        
        while [ $attempt -lt $max_attempts ]; do
          if curl -f http://localhost:5153/health 2>/dev/null; then
            echo "‚úÖ Application is healthy!"
            exit 0
          fi
          
          attempt=$((attempt + 1))
          echo "‚è≥ Attempt $attempt/$max_attempts failed, retrying in 5s..."
          sleep 5
        done
        
        echo "‚ùå Health check failed after $max_attempts attempts"
        docker-compose logs webapp
        exit 1

    - name: Cleanup old Docker resources
      if: success()
      run: |
        echo "üßπ D·ªçn d·∫πp Docker resources..."
        docker image prune -af --filter "until=24h"
        docker volume prune -f

    - name: Send notification on failure
      if: failure()
      run: |
        echo "‚ùå Deploy failed! Check logs above."
        docker-compose logs --tail=100 webapp