@model IEnumerable<HotelManagement.Models.HistoryCheckin>

@{
    ViewData["Title"] = "Check-out";
}

<!-- Page Header -->
<div class="page-header fade-in-up">
    <h1>
        <i class="fas fa-sign-out-alt"></i>
        Quản lý Check-out
    </h1>
    <p>Danh sách các phòng đã check-in và chờ khách trả phòng</p>
</div>

<!-- Main Content -->
<div class="card-modern fade-in-up">
    <div class="card-header-modern d-flex justify-content-between align-items-center">
        <span><i class="fas fa-clipboard-check me-2"></i>Danh sách Chờ Check-out</span>
        <span class="badge-modern badge-warning-modern">
            <i class="fas fa-list"></i> @Model.Count() phòng
        </span>
    </div>
    <div class="card-body-modern">
        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <div class="stats-icon success mx-auto mb-4">
                    <i class="fas fa-check-circle"></i>
                </div>
                <h4 class="text-muted mb-3">Không có phòng chờ check-out</h4>
                <p class="text-muted">Tất cả các phòng đã được check-out hoàn tất</p>
                <a href="@Url.Action("Index", "CheckIn")" class="btn btn-primary-modern mt-3">
                    <i class="fas fa-sign-in-alt"></i> Quản lý Check-in
                </a>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table-modern mb-0">
                    <thead>
                        <tr>
                            <th><i class="fas fa-hashtag"></i> Mã ĐP</th>
                            <th><i class="fas fa-user"></i> Khách hàng</th>
                            <th><i class="fas fa-door-open"></i> Phòng</th>
                            <th><i class="fas fa-tag"></i> Loại phòng</th>
                            <th><i class="fas fa-sign-in-alt"></i> Check-in</th>
                            <th><i class="fas fa-calendar-times"></i> Check-out DK</th>
                            <th><i class="fas fa-hourglass-half"></i> Số ngày</th>
                            <th><i class="fas fa-cog"></i> Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            var daysDiff = (DateTime.Now - item.CheckInDate).Days;
                            var isOverdue = DateTime.Now > item.ReservationForm!.CheckOutDate;
                            
                            // Kiểm tra trạng thái Invoice và Checkout
                            var invoice = item.ReservationForm?.Invoices?.FirstOrDefault();
                            var hasCheckout = item.ReservationForm?.HistoryCheckOut != null;
                            
                            <tr>
                                <td>
                                    <strong class="text-primary">#@item.ReservationFormID</strong>
                                </td>
                                <td>
                                    <div>
                                        <strong>@item.ReservationForm?.Customer?.FullName</strong>
                                        <br />
                                        <small class="text-muted">
                                            <i class="fas fa-phone"></i> @item.ReservationForm?.Customer?.PhoneNumber
                                        </small>
                                    </div>
                                </td>
                                <td>
                                    <span class="badge-modern badge-warning-modern">
                                        <i class="fas fa-bed"></i> @item.ReservationForm?.RoomID
                                    </span>
                                </td>
                                <td>@item.ReservationForm?.Room?.RoomCategory?.RoomCategoryName</td>
                                <td>
                                    <div>
                                        <strong>@item.CheckInDate.ToString("dd/MM/yyyy")</strong>
                                        <br />
                                        <small class="text-muted">@item.CheckInDate.ToString("HH:mm")</small>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <strong>@item.ReservationForm?.CheckOutDate.ToString("dd/MM/yyyy")</strong>
                                        <br />
                                        <small class="text-muted">@item.ReservationForm?.CheckOutDate.ToString("HH:mm")</small>
                                        @if (isOverdue)
                                        {
                                            <br />
                                            <span class="badge-modern badge-danger-modern">
                                                <i class="fas fa-exclamation-triangle"></i> Quá hạn!
                                            </span>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <span class="badge-modern badge-info-modern">
                                        <i class="fas fa-calendar-day"></i> @daysDiff ngày
                                    </span>
                                </td>
                                <td>
                                    <div class="d-flex gap-2 flex-wrap">
                                        @* Nút Xem chi tiết - Luôn hiển thị *@
                                        <a asp-action="Details" asp-route-reservationFormID="@item.ReservationFormID" 
                                           class="btn btn-info-modern btn-sm" title="Xem chi tiết và tính tiền">
                                            <i class="fas fa-eye"></i> Chi tiết
                                        </a>
                                        
                                        @* Luồng 1: Chưa có invoice - Hiển thị 2 nút thanh toán *@
                                        @if (invoice == null)
                                        {
                                            @* Nút 1: Trả phòng và Thanh toán (tính theo GIỜ THỰC TẾ) *@
                                            <form asp-action="CheckoutThenPay" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="reservationFormID" value="@item.ReservationFormID" />
                                                <button type="submit" class="btn btn-warning-modern btn-sm" 
                                                        onclick="return confirm('Trả phòng và thanh toán sau?\nTiền phòng sẽ tính theo THỜI GIAN THỰC TẾ check-in → checkout.')">
                                                    <i class="fas fa-sign-out-alt"></i> Trả phòng
                                                </button>
                                            </form>
                                            
                                            @* Nút 2: Thanh toán trước (tính theo GIỜ DỰ KIẾN) *@
                                            <button type="button" class="btn btn-success-modern btn-sm" 
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#paymentModal-@item.ReservationFormID">
                                                <i class="fas fa-money-bill-wave"></i> Thanh toán trước
                                            </button>
                                            
                                            @* Nút Dịch vụ *@
                                            <a asp-controller="RoomService" asp-action="Index" asp-route-reservationFormID="@item.ReservationFormID" 
                                               class="btn btn-info-modern btn-sm">
                                                <i class="fas fa-concierge-bell"></i> Dịch vụ
                                            </a>
                                        }
                                        @* Luồng 2: Có invoice CHƯA THANH TOÁN (CheckoutThenPay) - Hiển thị nút Thanh toán *@
                                        else if (invoice.IsPaid == false)
                                        {
                                            <a asp-action="Payment" asp-route-invoiceID="@invoice.InvoiceID" 
                                               class="btn btn-danger-modern btn-sm">
                                                <i class="fas fa-exclamation-circle"></i> Cần thanh toán
                                            </a>
                                            <span class="badge-modern badge-danger-modern">
                                                @((invoice.TotalAmount ?? 0).ToString("N0", System.Globalization.CultureInfo.InvariantCulture)) VNĐ
                                            </span>
                                        }
                                        @* Luồng 3: Đã thanh toán NHƯNG CHƯA CHECKOUT (PayThenCheckout) - Hiển thị nút Trả phòng thực tế *@
                                        else if (invoice.IsPaid && !hasCheckout && invoice.CheckoutType == "PAY_THEN_CHECKOUT")
                                        {
                                            <form asp-action="ActualCheckout" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="reservationFormID" value="@item.ReservationFormID" />
                                                <button type="submit" class="btn btn-primary-modern btn-sm" 
                                                        onclick="return confirm('Xác nhận trả phòng?\nNếu quá giờ dự kiến sẽ tính phí phụ thu.')">
                                                    <i class="fas fa-door-open"></i> Trả phòng
                                                </button>
                                            </form>
                                            <span class="badge-modern badge-success-modern">
                                                <i class="fas fa-check"></i> Đã thanh toán
                                            </span>
                                        }
                                        @* Luồng 4: Đã hoàn tất tất cả - Hiển thị badge hoàn tất *@
                                        else
                                        {
                                            <span class="badge-modern badge-success-modern">
                                                <i class="fas fa-check-double"></i> Hoàn tất
                                            </span>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@* Modals thanh toán trước - Đặt ngoài bảng để tránh xung đột DOM *@
@foreach (var item in Model)
{
    var invoice = item.ReservationForm?.Invoices?.FirstOrDefault();
    
    @* Chỉ hiển thị modal cho phòng chưa có invoice *@
    @if (invoice == null)
    {
        <div class="modal fade" id="paymentModal-@item.ReservationFormID" tabindex="-1" aria-labelledby="paymentModalLabel-@item.ReservationFormID" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header bg-success text-white">
                        <h5 class="modal-title" id="paymentModalLabel-@item.ReservationFormID">
                            <i class="fas fa-money-bill-wave"></i> Thanh toán trước
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form asp-action="PayThenCheckout" method="post">
                        @Html.AntiForgeryToken()
                        <div class="modal-body">
                            <input type="hidden" name="reservationFormID" value="@item.ReservationFormID" />
                            
                            <div class="alert alert-info mb-3">
                                <i class="fas fa-info-circle"></i>
                                <strong>Thông tin phòng:</strong>
                                <ul class="mb-0 mt-2">
                                    <li>Phòng: <strong>@item.ReservationForm?.RoomID</strong></li>
                                    <li>Khách: <strong>@item.ReservationForm?.Customer?.FullName</strong></li>
                                    <li>Check-out dự kiến: <strong>@item.ReservationForm?.CheckOutDate.ToString("dd/MM/yyyy HH:mm")</strong></li>
                                </ul>
                            </div>
                            
                            <div class="alert alert-warning mb-3">
                                <i class="fas fa-exclamation-triangle"></i>
                                <strong>Lưu ý:</strong>
                                <ul class="mb-0 mt-2">
                                    <li>Tiền phòng tính từ giờ check-in <strong>THỰC TẾ</strong> đến giờ checkout <strong>DỰ KIẾN</strong></li>
                                    <li>Khách có thể ở đến <strong>@item.ReservationForm?.CheckOutDate.ToString("dd/MM/yyyy HH:mm")</strong></li>
                                    <li>Nếu trả phòng muộn sẽ tính <strong class="text-danger">phí phụ thu</strong></li>
                                </ul>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label fw-bold">
                                    <i class="fas fa-credit-card"></i> Phương thức thanh toán <span class="text-danger">*</span>
                                </label>
                                <select name="paymentMethod" class="form-select" required>
                                    <option value="">-- Chọn phương thức thanh toán --</option>
                                    <option value="CASH">💵 Tiền mặt</option>
                                    <option value="CARD">💳 Thẻ</option>
                                    <option value="TRANSFER">🏦 Chuyển khoản</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                <i class="fas fa-times"></i> Hủy
                            </button>
                            <button type="submit" class="btn btn-success">
                                <i class="fas fa-check-circle"></i> Xác nhận thanh toán
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
}

<!-- Statistics -->
@if (Model.Any())
{
    var overdueCount = Model.Count(x => DateTime.Now > x.ReservationForm!.CheckOutDate);
    var normalCount = Model.Count() - overdueCount;
    
    <div class="row g-4 mt-3">
        <div class="col-md-6">
            <div class="card-modern fade-in-up" style="animation-delay: 0.2s">
                <div class="card-body-modern text-center">
                    <div class="stats-icon success mx-auto">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="stats-title mt-3">ĐÚNG HẠN</div>
                    <div class="stats-value text-success">@normalCount phòng</div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card-modern fade-in-up" style="animation-delay: 0.3s">
                <div class="card-body-modern text-center">
                    <div class="stats-icon danger mx-auto">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div class="stats-title mt-3">QUÁ HẠN</div>
                    <div class="stats-value text-danger">@overdueCount phòng</div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Fix modal backdrop issue và đảm bảo modal hoạt động mượt mà
        document.addEventListener('DOMContentLoaded', function() {
            // Xóa tất cả backdrop cũ khi tải trang
            document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
            
            // Reset body class
            document.body.classList.remove('modal-open');
            document.body.style.overflow = '';
            document.body.style.paddingRight = '';
            
            // Lắng nghe sự kiện modal
            var modals = document.querySelectorAll('.modal');
            modals.forEach(function(modal) {
                // Khi modal được hiển thị
                modal.addEventListener('show.bs.modal', function (event) {
                    console.log('Opening modal:', this.id);
                });
                
                // Khi modal được ẩn
                modal.addEventListener('hidden.bs.modal', function (event) {
                    console.log('Closing modal:', this.id);
                    
                    // Cleanup: Xóa backdrop thừa
                    setTimeout(function() {
                        var backdrops = document.querySelectorAll('.modal-backdrop');
                        if (backdrops.length > 0) {
                            backdrops.forEach(function(backdrop) {
                                backdrop.remove();
                            });
                        }
                        
                        // Reset body nếu không còn modal nào mở
                        var openModals = document.querySelectorAll('.modal.show');
                        if (openModals.length === 0) {
                            document.body.classList.remove('modal-open');
                            document.body.style.overflow = '';
                            document.body.style.paddingRight = '';
                        }
                    }, 100);
                });
                
                // Xử lý lỗi khi modal bị stuck
                modal.addEventListener('hide.bs.modal', function (event) {
                    // Đảm bảo modal có thể đóng
                    this.setAttribute('aria-hidden', 'true');
                });
            });
            
            // Cleanup khi click vào backdrop
            document.addEventListener('click', function(event) {
                if (event.target.classList.contains('modal-backdrop')) {
                    // Tìm modal đang mở và đóng nó
                    var openModal = document.querySelector('.modal.show');
                    if (openModal) {
                        var modalInstance = bootstrap.Modal.getInstance(openModal);
                        if (modalInstance) {
                            modalInstance.hide();
                        }
                    }
                }
            });
        });
        
        // Confirm checkout with actual time calculation
        function confirmCheckout(event, type) {
            var message = type === 'checkout' 
                ? 'Trả phòng và thanh toán sau?\n\nTiền phòng sẽ tính theo THỜI GIAN THỰC TẾ từ check-in đến checkout hiện tại.'
                : 'Xác nhận trả phòng?\n\nNếu quá giờ dự kiến sẽ tính phí phụ thu.';
            
            if (!confirm(message)) {
                event.preventDefault();
                return false;
            }
            return true;
        }
    </script>
    
    <style>
        /* Fix modal z-index và animation issues */
        .modal {
            z-index: 1055 !important;
        }
        
        .modal-backdrop {
            z-index: 1050 !important;
        }
        
        /* Smooth modal transition */
        .modal.fade .modal-dialog {
            transition: transform 0.3s ease-out;
        }
        
        /* Prevent modal jump */
        .modal-open {
            overflow: hidden !important;
        }
        
        /* Fix modal content scroll */
        .modal-body {
            max-height: calc(100vh - 200px);
            overflow-y: auto;
        }
        
        /* Improve modal appearance */
        .modal-dialog-centered {
            min-height: calc(100% - 3.5rem);
        }
        
        .modal-content {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            border: none;
            border-radius: 0.5rem;
        }
        
        .modal-header {
            border-bottom: 2px solid rgba(255, 255, 255, 0.2);
            border-radius: 0.5rem 0.5rem 0 0;
        }
        
        .modal-footer {
            border-top: 1px solid #dee2e6;
            border-radius: 0 0 0.5rem 0.5rem;
        }
        
        /* Prevent table interference */
        .table-responsive {
            overflow-x: auto;
            overflow-y: visible;
        }
        
        /* Hover effect for buttons */
        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            transition: all 0.2s ease;
        }
    </style>
}
