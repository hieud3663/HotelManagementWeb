events {events {

    worker_connections 1024;    worker_connections 1024;

}}



http {http {

    upstream webapp {    upstream webapp {

        server webapp:8080;        server webapp:8080;

    }    }



    server {    server {

        listen 80;        listen 80;

        server_name localhost;        server_name localhost;



        location / {        # Redirect HTTP to HTTPS (optional)

            proxy_pass http://webapp;        # return 301 https://$server_name$request_uri;

            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;        location / {

            proxy_set_header Connection keep-alive;            proxy_pass http://webapp;

            proxy_set_header Host $host;            proxy_http_version 1.1;

            proxy_cache_bypass $http_upgrade;            proxy_set_header Upgrade $http_upgrade;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            proxy_set_header Connection keep-alive;

            proxy_set_header X-Forwarded-Proto $scheme;            proxy_set_header Host $host;

            proxy_set_header X-Real-IP $remote_addr;            proxy_cache_bypass $http_upgrade;

                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Timeouts            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 60s;            proxy_set_header X-Real-IP $remote_addr;

            proxy_send_timeout 60s;        }

            proxy_read_timeout 60s;    }

        }

    }    # HTTPS server (nếu có SSL certificate)

}    # server {

    #     listen 443 ssl;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/nginx/certs/cert.pem;
    #     ssl_certificate_key /etc/nginx/certs/key.pem;
    #
    #     location / {
    #         proxy_pass http://webapp;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection keep-alive;
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}